// ÌÉ≠ Ï†ÑÌôò Î°úÏßÅ
(function(){
  // Î™®Î∞îÏùº Ïä§ÏôÄÏù¥ÌîÑ ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÎπÑÌôúÏÑ±Ìôî (ÏöîÍµ¨ÏÇ¨Ìï≠Ïóê Îî∞Îùº Ï†úÍ±∞)
  function initSwipe(){
    return; // no-op
  }
  function activateTab(tab){
    // ÌòÑÏû¨ ÌôúÏÑ± ÌÉ≠Ïùò Îç∞Ïù¥ÌÑ∞ ÏûÑÏãú Ï†ÄÏû•
    const currentActiveTab = document.querySelector('.tab-btn.border-blue-600');
    if (currentActiveTab) {
      const currentTabName = currentActiveTab.getAttribute('data-tab');
      saveCurrentTabData(currentTabName);
    }

    // ÌÉ≠ UI Ï†ÑÌôò
    document.querySelectorAll('.tab-btn').forEach(btn=>{
      btn.classList.remove('text-blue-600','border-b-2','border-blue-600');
      btn.classList.add('text-gray-600');
    });
    document.querySelectorAll('.tab-panel').forEach(p=>p.classList.add('hidden'));

    const activeBtn = document.querySelector(`.tab-btn[data-tab="${tab}"]`);
    const activePanel = document.querySelector(`.tab-panel[data-tab="${tab}"]`);
    if(activeBtn){
      activeBtn.classList.remove('text-gray-600');
      activeBtn.classList.add('text-blue-600','border-b-2','border-blue-600');
    }
    if(activePanel){
      activePanel.classList.remove('hidden');
    }
    try{ document.dispatchEvent(new CustomEvent('tab:activated', { detail: { tab } })); }catch(e){}

    // ÏÉàÎ°ú ÌôúÏÑ±ÌôîÎêú ÌÉ≠Ïùò ÏûÑÏãú Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    loadTabData(tab);
  }

  // ÌòÑÏû¨ ÌÉ≠Ïùò Îç∞Ïù¥ÌÑ∞ ÏûÑÏãú Ï†ÄÏû•
  function saveCurrentTabData(tabName) {
    if (!tabName) return;
    
    try {
      let data = {};
      
      switch(tabName) {
        case 'basic':
          data = {
            project_no: document.getElementById('project-no-prefix')?.value + document.getElementById('project-no-number')?.value,
            construction_company: document.getElementById('construction-company')?.value,
            site_name: document.getElementById('site-name')?.value,
            address: document.getElementById('address')?.value,
            detail_address: document.getElementById('detail-address')?.value,
            household_count: document.getElementById('household-count')?.value,
            registration_date: document.getElementById('registration-date')?.value,
            delivery_date: document.getElementById('delivery-date')?.value,
            completion_date: document.getElementById('completion-date')?.value,
            certification_audit: document.getElementById('certification-audit')?.value,
            home_iot: document.getElementById('home-iot')?.value
          };
          break;
        case 'contacts':
          data = {
            pm_name: document.getElementById('pm_name')?.value,
            pm_phone: document.getElementById('pm_phone')?.value,
            sales_manager_name: document.getElementById('sales_manager_name')?.value,
            sales_manager_phone: document.getElementById('sales_manager_phone')?.value,
            construction_manager_name: document.getElementById('construction_manager_name')?.value,
            construction_manager_phone: document.getElementById('construction_manager_phone')?.value,
            installer_name: document.getElementById('installer_name')?.value,
            installer_phone: document.getElementById('installer_phone')?.value,
            network_manager_name: document.getElementById('network_manager_name')?.value,
            network_manager_phone: document.getElementById('network_manager_phone')?.value
          };
          break;
        case 'products':
          data = {
            wallpad_model: document.getElementById('wallpad_model')?.value,
            wallpad_qty: document.getElementById('wallpad_qty')?.value,
            doorphone_model: document.getElementById('doorphone_model')?.value,
            doorphone_qty: document.getElementById('doorphone_qty')?.value,
            lobbyphone_model: document.getElementById('lobbyphone_model')?.value,
            lobbyphone_qty: document.getElementById('lobbyphone_qty')?.value
          };
          break;
        case 'household':
          data = {
            lighting_enabled: document.getElementById('lighting_enabled')?.value,
            lighting_company: document.getElementById('lighting_company')?.value,
            standby_enabled: document.getElementById('standby_enabled')?.value,
            standby_company: document.getElementById('standby_company')?.value,
            gas_enabled: document.getElementById('gas_enabled')?.value,
            gas_company: document.getElementById('gas_company')?.value
          };
          break;
        case 'common':
          data = {
            parking_enabled: document.getElementById('parking_enabled')?.value,
            parking_company: document.getElementById('parking_company')?.value,
            metering_enabled: document.getElementById('metering_enabled')?.value,
            metering_company: document.getElementById('metering_company')?.value,
            cctv_enabled: document.getElementById('cctv_enabled')?.value,
            cctv_company: document.getElementById('cctv_company')?.value
          };
          break;
      }
      
      // Îπà Í∞í Ï†úÍ±∞
      data = Object.fromEntries(Object.entries(data).filter(([_, v]) => v !== '' && v !== null && v !== undefined));
      
      if (Object.keys(data).length > 0) {
        TempStorage.saveTempData(tabName, data);
      }
    } catch (error) {
      console.error(`‚ùå ${tabName} ÌÉ≠ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• Ïã§Ìå®:`, error);
    }
  }

  // ÌÉ≠ Îç∞Ïù¥ÌÑ∞ Î°úÎìú
  function loadTabData(tabName) {
    if (!tabName) return;
    
    try {
      const tempData = TempStorage.loadTempData(tabName);
      if (!tempData) return;
      
      console.log(`üìÇ ${tabName} ÌÉ≠ ÏûÑÏãú Îç∞Ïù¥ÌÑ∞ Î°úÎìú:`, tempData);
      
      switch(tabName) {
        case 'basic':
          if (tempData.project_no) {
            const prefix = tempData.project_no.substring(0, 3);
            const number = tempData.project_no.substring(3);
            if (document.getElementById('project-no-prefix')) document.getElementById('project-no-prefix').value = prefix;
            if (document.getElementById('project-no-number')) document.getElementById('project-no-number').value = number;
          }
          if (tempData.construction_company) document.getElementById('construction-company').value = tempData.construction_company;
          if (tempData.site_name) document.getElementById('site-name').value = tempData.site_name;
          if (tempData.address) document.getElementById('address').value = tempData.address;
          if (tempData.detail_address) document.getElementById('detail-address').value = tempData.detail_address;
          if (tempData.household_count) document.getElementById('household-count').value = tempData.household_count;
          if (tempData.registration_date) document.getElementById('registration-date').value = tempData.registration_date;
          if (tempData.delivery_date) document.getElementById('delivery-date').value = tempData.delivery_date;
          if (tempData.completion_date) document.getElementById('completion-date').value = tempData.completion_date;
          if (tempData.certification_audit) document.getElementById('certification-audit').value = tempData.certification_audit;
          if (tempData.home_iot) document.getElementById('home-iot').value = tempData.home_iot;
          break;
        case 'contacts':
          if (tempData.pm_name) document.getElementById('pm_name').value = tempData.pm_name;
          if (tempData.pm_phone) document.getElementById('pm_phone').value = tempData.pm_phone;
          if (tempData.sales_manager_name) document.getElementById('sales_manager_name').value = tempData.sales_manager_name;
          if (tempData.sales_manager_phone) document.getElementById('sales_manager_phone').value = tempData.sales_manager_phone;
          if (tempData.construction_manager_name) document.getElementById('construction_manager_name').value = tempData.construction_manager_name;
          if (tempData.construction_manager_phone) document.getElementById('construction_manager_phone').value = tempData.construction_manager_phone;
          if (tempData.installer_name) document.getElementById('installer_name').value = tempData.installer_name;
          if (tempData.installer_phone) document.getElementById('installer_phone').value = tempData.installer_phone;
          if (tempData.network_manager_name) document.getElementById('network_manager_name').value = tempData.network_manager_name;
          if (tempData.network_manager_phone) document.getElementById('network_manager_phone').value = tempData.network_manager_phone;
          break;
        case 'products':
          if (tempData.wallpad_model) document.getElementById('wallpad_model').value = tempData.wallpad_model;
          if (tempData.wallpad_qty) document.getElementById('wallpad_qty').value = tempData.wallpad_qty;
          if (tempData.doorphone_model) document.getElementById('doorphone_model').value = tempData.doorphone_model;
          if (tempData.doorphone_qty) document.getElementById('doorphone_qty').value = tempData.doorphone_qty;
          if (tempData.lobbyphone_model) document.getElementById('lobbyphone_model').value = tempData.lobbyphone_model;
          if (tempData.lobbyphone_qty) document.getElementById('lobbyphone_qty').value = tempData.lobbyphone_qty;
          break;
        case 'household':
          // Í∏∞Î≥∏Í∞íÏùÑ 'Y'Î°ú ÏÑ§Ï†ï
          document.getElementById('lighting_enabled').value = 'Y';
          document.getElementById('standby_enabled').value = 'Y';
          document.getElementById('gas_enabled').value = 'Y';
          
          // ÏûÑÏãú Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ ÎçÆÏñ¥Ïì∞Í∏∞
          if (tempData.lighting_enabled) document.getElementById('lighting_enabled').value = tempData.lighting_enabled;
          if (tempData.lighting_company) document.getElementById('lighting_company').value = tempData.lighting_company;
          if (tempData.standby_enabled) document.getElementById('standby_enabled').value = tempData.standby_enabled;
          if (tempData.standby_company) document.getElementById('standby_company').value = tempData.standby_company;
          if (tempData.gas_enabled) document.getElementById('gas_enabled').value = tempData.gas_enabled;
          if (tempData.gas_company) document.getElementById('gas_company').value = tempData.gas_company;
          break;
        case 'common':
          // Í∏∞Î≥∏Í∞íÏùÑ 'Y'Î°ú Í∞ïÏ†ú Ï†ÅÏö©ÌïòÍ≥†, ÏûÑÏãúÏ†ÄÏû• Í∞íÏù¥ 'Y'Ïùº ÎïåÎßå ÌóàÏö©
          const parkingEl = document.getElementById('parking_enabled');
          const meteringEl = document.getElementById('metering_enabled');
          const cctvEl = document.getElementById('cctv_enabled');

          if (parkingEl) parkingEl.value = 'Y';
          if (meteringEl) meteringEl.value = 'Y';
          if (cctvEl) cctvEl.value = 'Y';

          // ÏûÑÏãú Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞Í∞Ä 'Y'Ïùº ÎïåÎßå Î∞òÏòÅ (NÏùÄ Î¨¥Ïãú)
          if (tempData.parking_enabled === 'Y') document.getElementById('parking_enabled').value = 'Y';
          if (tempData.parking_company) document.getElementById('parking_company').value = tempData.parking_company;
          if (tempData.metering_enabled === 'Y') document.getElementById('metering_enabled').value = 'Y';
          if (tempData.metering_company) document.getElementById('metering_company').value = tempData.metering_company;
          if (tempData.cctv_enabled === 'Y') document.getElementById('cctv_enabled').value = 'Y';
          if (tempData.cctv_company) document.getElementById('cctv_company').value = tempData.cctv_company;
          break;
      }
    } catch (error) {
      console.error(`‚ùå ${tabName} ÌÉ≠ Îç∞Ïù¥ÌÑ∞ Î°úÎìú Ïã§Ìå®:`, error);
    }
  }

  // ÏÇ¨Ïù¥Ìä∏ Î™©Î°ù Î°úÎìú (Í∞ÑÎã® ÎîîÎ∞îÏö¥Ïä§Îßå Ïú†ÏßÄ)
  let loadSitesTimeout = null;
  async function loadSitesIntoSelect(){
    const select = document.getElementById('site-select');
    if(!select) return;
    
    // Î°úÍ∑∏Ïù∏ ÌÜ†ÌÅ∞ ÏóÜÏúºÎ©¥ Ìò∏Ï∂úÌïòÏßÄ ÏïäÏùå
    if (typeof TokenManager === 'undefined' || !TokenManager.isValid()) {
      return;
    }
    
    // Ïù¥Ï†Ñ ÌÉÄÏù¥Î®∏ Ï∑®ÏÜå (ÎîîÎ∞îÏö¥Ïã±)
    if (loadSitesTimeout) {
      clearTimeout(loadSitesTimeout);
    }
    
    // 300ms ÎîîÎ∞îÏö¥Ïã± Ï†ÅÏö©
    loadSitesTimeout = setTimeout(async () => {
      try {
        select.innerHTML = '<option value="">ÌòÑÏû•ÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî</option>';
        const res = await apiRequest('/sites', { method: 'GET' });
        const seenNames = new Set();
        (res.sites||[]).forEach(site=>{
          const nameKey = String(site.site_name||'').trim();
          if(!nameKey) return;
          if(seenNames.has(nameKey)) return; // Ïù¥Î¶Ñ Í∏∞Ï§Ä Ï§ëÎ≥µ Ï†úÍ±∞
          seenNames.add(nameKey);
          const opt = document.createElement('option');
          opt.value = site.id;
          opt.textContent = site.site_name;
          select.appendChild(opt);
        });
        console.log('‚úÖ ÏÇ¨Ïù¥Ìä∏ Î™©Î°ù Î°úÎìú ÏôÑÎ£å:', seenNames.size + 'Í∞ú ÌòÑÏû•');
      } catch(err) {
        // Ïù∏Ï¶ù Ïò§Î•ò Îì±ÏùÄ Î°úÍ∑∏Ïù∏ Ï†ÑÏùº Ïàò ÏûàÏúºÎØÄÎ°ú Ï°∞Ïö©Ìûà Î¨¥Ïãú
        if (String(err.message || '').includes('Ïù∏Ï¶ù ÌÜ†ÌÅ∞')) return;
        if (String(err.message || '').includes('Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÌÜ†ÌÅ∞')) return;
        console.error('‚ùå ÏÇ¨Ïù¥Ìä∏ Î™©Î°ù Î°úÎìú Ïã§Ìå®:', err);
        Swal.fire('Ïò§Î•ò','ÌòÑÏû• Î™©Î°ùÏùÑ Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§.','error');
      }
    }, 300);
  }

  // Î™®Îì† ÌÉ≠Ïóê ÌîÑÎ°úÏ†ùÌä∏ No. ÌëúÏãú
  function updateAllTabsWithSiteInfo(siteInfo) {
    if (!siteInfo) return;
    
    const { project_no } = siteInfo;
    
    // Í∞Å ÌÉ≠Ïùò ÌîÑÎ°úÏ†ùÌä∏ No. ÏóÖÎç∞Ïù¥Ìä∏
    const tabs = ['contacts', 'products', 'household', 'common'];
    tabs.forEach(tab => {
      const projNoElement = document.getElementById(`${tab}-project-no`);
      
      if (projNoElement) projNoElement.value = project_no || '';
    });
  }

  // ÏµúÏ¢Ö Ï†ÄÏû• Í∏∞Îä•
  async function finalSave() {
    try {
      // ÌòÑÏû¨ ÌôúÏÑ± ÌÉ≠Ïùò Îç∞Ïù¥ÌÑ∞ÎèÑ ÏûÑÏãú Ï†ÄÏû•
      const currentActiveTab = document.querySelector('.tab-btn.border-blue-600');
      if (currentActiveTab) {
        const currentTabName = currentActiveTab.getAttribute('data-tab');
        saveCurrentTabData(currentTabName);
      }

      const allTempData = (typeof TempStorage !== 'undefined' && TempStorage.getAllTempData) ? TempStorage.getAllTempData() : {};

      const confirm = await Swal.fire({
        title: 'ÏµúÏ¢Ö Ï†ÄÏû•',
        html: `
          <div class="text-left">
            <p class="mb-2">Îã§Ïùå Îç∞Ïù¥ÌÑ∞Î•º ÏàúÏ∞® Ï†ÄÏû•Ìï©ÎãàÎã§.</p>
            <ul class="text-sm text-gray-600">
              ${Object.keys(allTempData).map(tab => `<li>‚Ä¢ ${getTabDisplayName(tab)}</li>`).join('')}
            </ul>
          </div>
        `,
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: 'Ï†ÄÏû•',
        cancelButtonText: 'Ï∑®ÏÜå'
      });
      if (!confirm.isConfirmed) return;

      Swal.fire({ title: 'Ï†ÄÏû• Ï§ë...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });

      // 1) ÌòÑÏû• ÏÉùÏÑ±/ÏàòÏ†ï Î≥¥Ïû• (site_id ÌôïÎ≥¥)
      const siteSelect = document.getElementById('site-select');
      let siteId = siteSelect && siteSelect.value ? parseInt(siteSelect.value, 10) : null;

      // Í∏∞Î≥∏Ï†ïÎ≥¥ payload Íµ¨ÏÑ± (ÌïÑÎìúÎ™ÖÏùÄ site-basic.jsÏôÄ ÎèôÏùº)
      const basic = allTempData.basic || {};
      const projectNo = basic.project_no || (document.getElementById('project-no-prefix')?.value + document.getElementById('project-no-number')?.value) || null;
      const basicPayload = Object.keys(basic).length ? basic : {
        project_no: projectNo || null,
        construction_company: document.getElementById('construction-company')?.value || null,
        site_name: document.getElementById('site-name')?.value || null,
        address: document.getElementById('address')?.value || null,
        detail_address: document.getElementById('detail-address')?.value || null,
        household_count: parseInt(document.getElementById('household-count')?.value||'0',10),
        registration_date: document.getElementById('registration-date')?.value || null,
        delivery_date: document.getElementById('delivery-date')?.value || null,
        completion_date: document.getElementById('completion-date')?.value || null,
        certification_audit: document.getElementById('certification-audit')?.value || 'N',
        home_iot: document.getElementById('home-iot')?.value || 'N'
      };

      let createdOrLoadedSite = null;
      if (!siteId) {
        // Ïã†Í∑ú ÏÉùÏÑ± ÌïÑÏöî
        const createRes = await apiRequest('/sites', { method: 'POST', body: basicPayload });
        createdOrLoadedSite = createRes.site || null;
        // Î™©Î°ù Í∞±Ïã† Î∞è ÏÑ†ÌÉùÍ∞í Ï£ºÏûÖ
        if (window.loadSitesIntoSelect) { await window.loadSitesIntoSelect(); }
        if (createdOrLoadedSite && createdOrLoadedSite.id) {
          siteId = createdOrLoadedSite.id;
          if (siteSelect) siteSelect.value = String(siteId);
        }
      } else if (Object.keys(basicPayload||{}).length) {
        // Í∏∞Ï°¥ ÌòÑÏû• ÏàòÏ†ï
        await apiRequest(`/sites/${siteId}`, { method: 'PATCH', body: basicPayload });
      }

      // site Ï†ïÎ≥¥ ÌôïÎ≥¥(ÌîÑÎ°úÏ†ùÌä∏ No Î∏åÎ°úÎìúÏ∫êÏä§Ìä∏)
      try {
        if (!createdOrLoadedSite && siteId) {
          const res = await apiRequest(`/sites/${siteId}`, { method: 'GET' });
          createdOrLoadedSite = res.site || null;
        }
        if (createdOrLoadedSite && window.updateAllTabsWithSiteInfo) {
          window.updateAllTabsWithSiteInfo(createdOrLoadedSite);
        } else if (projectNo && window.updateAllTabsWithSiteInfo) {
          window.updateAllTabsWithSiteInfo({ project_no: projectNo });
        }
      } catch(_) {}

      if (!siteId) throw new Error('ÌòÑÏû• ÏÉùÏÑ± ÎòêÎäî ÏÑ†ÌÉùÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');

      // 2) ÏàúÏ∞® Ï†ÄÏû•: Ïó∞ÎùΩÏ≤ò ‚Üí Ï†úÌíàÏàòÎüâ ‚Üí ÏÑ∏ÎåÄÎ∂Ä ‚Üí Í≥µÏö©Î∂Ä (Ï°∞Ïö© Î™®Îìú)
      window.__batchSaving = true;
      try{
        if (typeof saveContacts === 'function') { await saveContacts(); }
        if (typeof saveProducts === 'function') { await saveProducts(); }
        if (typeof saveHousehold === 'function') { await saveHousehold(); }
        if (typeof saveCommon === 'function') { await saveCommon(); }
      } finally {
        delete window.__batchSaving;
      }

      Swal.fire({ icon:'success', title:'Ï†ÄÏû• ÏôÑÎ£å', text:'Î™®Îì† Îç∞Ïù¥ÌÑ∞Í∞Ä Ï†ïÏÉÅ Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.', timer: 1800, showConfirmButton:false });
      TempStorage.clearAllTempData();
    } catch (error) {
      console.error('‚ùå ÏµúÏ¢Ö Ï†ÄÏû• Ïã§Ìå®:', error);
      Swal.fire('Ïò§Î•ò', error?.message || 'Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', 'error');
    }
  }

  // ÌÉ≠ ÌëúÏãú Ïù¥Î¶Ñ Í∞ÄÏ†∏Ïò§Í∏∞
  function getTabDisplayName(tabName) {
    const tabNames = {
      'basic': 'Í∏∞Î≥∏Ï†ïÎ≥¥',
      'contacts': 'Ïó∞ÎùΩÏ≤ò',
      'products': 'Ï†úÌíàÏàòÎüâ',
      'household': 'ÏÑ∏ÎåÄÎ∂ÄÏó∞Îèô',
      'common': 'Í≥µÏö©Î∂ÄÏó∞Îèô'
    };
    return tabNames[tabName] || tabName;
  }

  // Í∞Å ÌÉ≠Î≥Ñ Ï†ÄÏû• Ìï®ÏàòÎì§
  async function saveBasicData(data) {
    // Í∏∞Î≥∏Ï†ïÎ≥¥Îäî Ïù¥ÎØ∏ site-basic.jsÏóêÏÑú Ï≤òÎ¶¨ÎêòÎØÄÎ°ú Ïó¨Í∏∞ÏÑúÎäî ÏÉùÎûµ
    console.log('üíæ Í∏∞Î≥∏Ï†ïÎ≥¥ Ï†ÄÏû•:', data);
    return { success: true, message: 'Í∏∞Î≥∏Ï†ïÎ≥¥Îäî Ïù¥ÎØ∏ Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.' };
  }

  async function saveContactsData(data) {
    try {
      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÌòÑÏû• ID Í∞ÄÏ†∏Ïò§Í∏∞
      const siteSelect = document.getElementById('site-select');
      if (!siteSelect || !siteSelect.value) {
        throw new Error('ÌòÑÏû•ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      }
      
      const siteId = siteSelect.value;
      const response = await apiRequest(`/sites/${siteId}/contacts`, {
        method: 'POST',
        body: data
      });
      
      console.log('üíæ Ïó∞ÎùΩÏ≤ò Ï†ÄÏû• ÏÑ±Í≥µ:', response);
      return { success: true, message: response.message || 'Ïó∞ÎùΩÏ≤ò Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.' };
    } catch (error) {
      console.error('‚ùå Ïó∞ÎùΩÏ≤ò Ï†ÄÏû• Ïã§Ìå®:', error);
      throw new Error(`Ïó∞ÎùΩÏ≤ò Ï†ÄÏû• Ïã§Ìå®: ${error.message}`);
    }
  }

  async function saveProductsData(data) {
    try {
      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÌòÑÏû• ID Í∞ÄÏ†∏Ïò§Í∏∞
      const siteSelect = document.getElementById('site-select');
      if (!siteSelect || !siteSelect.value) {
        throw new Error('ÌòÑÏû•ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      }
      
      const siteId = siteSelect.value;
      const response = await apiRequest(`/sites/${siteId}/products`, {
        method: 'POST',
        body: data
      });
      
      console.log('üíæ Ï†úÌíàÏàòÎüâ Ï†ÄÏû• ÏÑ±Í≥µ:', response);
      return { success: true, message: response.message || 'Ï†úÌíàÏàòÎüâ Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.' };
    } catch (error) {
      console.error('‚ùå Ï†úÌíàÏàòÎüâ Ï†ÄÏû• Ïã§Ìå®:', error);
      throw new Error(`Ï†úÌíàÏàòÎüâ Ï†ÄÏû• Ïã§Ìå®: ${error.message}`);
    }
  }

  async function saveHouseholdData(data) {
    try {
      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÌòÑÏû• ID Í∞ÄÏ†∏Ïò§Í∏∞
      const siteSelect = document.getElementById('site-select');
      if (!siteSelect || !siteSelect.value) {
        throw new Error('ÌòÑÏû•ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      }
      
      const siteId = siteSelect.value;
      // ÌÉ≠ ÏûÑÏãú Îç∞Ïù¥ÌÑ∞ -> API Ïä§ÌÇ§Îßà(items Î∞∞Ïó¥)Î°ú Î≥ÄÌôò
      const items = [
        {
          integration_type: 'lighting_sw',
          enabled: data.lighting_enabled || 'Y',
          company_name: data.lighting_company || null,
          project_no: document.getElementById('household-project-no')?.value || null,
        },
        {
          integration_type: 'standby_power_sw',
          enabled: data.standby_enabled || 'Y',
          company_name: data.standby_company || null,
          project_no: document.getElementById('household-project-no')?.value || null,
        },
        {
          integration_type: 'gas_detector',
          enabled: data.gas_enabled || 'Y',
          company_name: data.gas_company || null,
          project_no: document.getElementById('household-project-no')?.value || null,
        },
      ];
      const response = await apiRequest(`/sites/${siteId}/integrations/household`, {
        method: 'POST',
        body: { items }
      });
      
      console.log('üíæ ÏÑ∏ÎåÄÎ∂ÄÏó∞Îèô Ï†ÄÏû• ÏÑ±Í≥µ:', response);
      return { success: true, message: response.message || 'ÏÑ∏ÎåÄÎ∂ÄÏó∞Îèô Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.' };
    } catch (error) {
      console.error('‚ùå ÏÑ∏ÎåÄÎ∂ÄÏó∞Îèô Ï†ÄÏû• Ïã§Ìå®:', error);
      throw new Error(`ÏÑ∏ÎåÄÎ∂ÄÏó∞Îèô Ï†ÄÏû• Ïã§Ìå®: ${error.message}`);
    }
  }

  async function saveCommonData(data) {
    try {
      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÌòÑÏû• ID Í∞ÄÏ†∏Ïò§Í∏∞
      const siteSelect = document.getElementById('site-select');
      if (!siteSelect || !siteSelect.value) {
        throw new Error('ÌòÑÏû•ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      }
      
      const siteId = siteSelect.value;
      // ÌÉ≠ ÏûÑÏãú Îç∞Ïù¥ÌÑ∞ -> API Ïä§ÌÇ§Îßà(items Î∞∞Ïó¥)Î°ú Î≥ÄÌôò
      const items = [
        {
          integration_type: 'parking_control',
          enabled: data.parking_enabled || 'Y',
          company_name: data.parking_company || null,
          project_no: document.getElementById('common-project-no')?.value || null,
        },
        {
          integration_type: 'remote_metering',
          enabled: data.metering_enabled || 'Y',
          company_name: data.metering_company || null,
          project_no: document.getElementById('common-project-no')?.value || null,
        },
        {
          integration_type: 'cctv',
          enabled: data.cctv_enabled || 'Y',
          company_name: data.cctv_company || null,
          project_no: document.getElementById('common-project-no')?.value || null,
        },
      ];
      const response = await apiRequest(`/sites/${siteId}/integrations/common`, {
        method: 'POST',
        body: { items }
      });
      
      console.log('üíæ Í≥µÏö©Î∂ÄÏó∞Îèô Ï†ÄÏû• ÏÑ±Í≥µ:', response);
      return { success: true, message: response.message || 'Í≥µÏö©Î∂ÄÏó∞Îèô Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.' };
    } catch (error) {
      console.error('‚ùå Í≥µÏö©Î∂ÄÏó∞Îèô Ï†ÄÏû• Ïã§Ìå®:', error);
      throw new Error(`Í≥µÏö©Î∂ÄÏó∞Îèô Ï†ÄÏû• Ïã§Ìå®: ${error.message}`);
    }
  }

  // Ïô∏Î∂ÄÏóêÏÑú Ìò∏Ï∂ú Í∞ÄÎä•ÌïòÎèÑÎ°ù export
  window.activateTab = activateTab;
  window.updateAllTabsWithSiteInfo = updateAllTabsWithSiteInfo;
  window.loadSitesIntoSelect = loadSitesIntoSelect;
  window.finalSave = finalSave;

  document.addEventListener('DOMContentLoaded', ()=>{
    // Ï¥àÍ∏∞ ÌÉ≠: Í∏∞Î≥∏Ï†ïÎ≥¥
    activateTab('basic');
    initSwipe();

    document.querySelectorAll('.tab-btn').forEach(btn=>{
      btn.addEventListener('click', ()=>activateTab(btn.dataset.tab));
    });

    const refreshBtn = document.getElementById('refresh-sites');
    if(refreshBtn){
      refreshBtn.addEventListener('click', (e)=>{ e.preventDefault(); loadSitesIntoSelect(); });
    }

    // Ïã†Í∑úÌòÑÏû• Î≤ÑÌäº Í¥ÄÎ†® Î°úÏßÅ Ï†úÍ±∞ (ÏõêÎ≥µ)

    // ÏµúÏ¢Ö Ï†ÄÏû• Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Îì±Î°ù
    const finalSaveBtn = document.getElementById('final-save-btn');
    if (finalSaveBtn) {
      finalSaveBtn.addEventListener('click', finalSave);
    }

    loadSitesIntoSelect();
    // ÌòÑÏû• ÏÑ†ÌÉù Ïãú Î™®Îì† ÌÉ≠ ÏÑúÎ≤Ñ Î°úÎìú Î≥¥Ïû•
    const siteSelect = document.getElementById('site-select');
    if (siteSelect) {
      siteSelect.addEventListener('change', ()=>{
        try{ if (typeof loadBasic === 'function') loadBasic(); }catch(_){ }
        try{ if (typeof loadContacts === 'function') loadContacts(); }catch(_){ }
        try{ if (typeof loadProducts === 'function') loadProducts(); }catch(_){ }
        try{ if (typeof loadHousehold === 'function') loadHousehold(); }catch(_){ }
        try{ if (typeof loadCommon === 'function') loadCommon(); }catch(_){ }
      });
    }
    // Ïï± Ï¥àÍ∏∞ Î°úÍ∑∏Ïù∏ ÏôÑÎ£å ÌõÑ ÏÇ¨Ïù¥Ìä∏/Ïó∞ÎùΩÏ≤ò Îì± Îç∞Ïù¥ÌÑ∞ Ïû¨Ï£ºÏûÖ
    document.addEventListener('auth:ready', ()=>{
      loadSitesIntoSelect();
      try{ document.dispatchEvent(new CustomEvent('tab:activated', { detail: { tab: 'contacts' } })); }catch(e){}
    });
  });
})();